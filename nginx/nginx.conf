user  root;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Оптимизация Nginx
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    server {
        listen       80;
        server_name  ${HOST};
        
        # Кэширование статических файлов фронтенда (долгое)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend:80;
            proxy_cache_valid 200 1y;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # Для HTML и конфигурационных файлов отключаем кэширование
        location ~* \.(html|config\.js)$ {
            proxy_pass http://frontend:80;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            expires -1;
        }

        # Проксирование фронтенда (основной маршрут, SPA fallback)
        location / {
            proxy_pass http://frontend:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Обработка ошибок
            proxy_intercept_errors on;
            error_page 404 =200 /index.html;
        }

        # Проксирование API (CORS обрабатывает FastAPI)
        location /api/ {
            proxy_pass http://app:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 
