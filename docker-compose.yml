version: '3.8'

services:

  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      finance_db:
        condition: service_healthy
      users_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SERVER_HOST=${SERVER_HOST}
      - PORT=${PORT}
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - DEBUG=${DEBUG}
      - API_VERSION=${API_VERSION}
      - API_PREFIX=${API_PREFIX}
      - SECRET_KEY=${SECRET_KEY}
      - SESSION_MAX_AGE=${SESSION_MAX_AGE}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - FINANCE_DB=${FINANCE_DB}
      - USERS_DB=${USERS_DB}
      - FINANCE_PORT=5432
      - USERS_PORT=5432
      - FINANCE_DB_HOST=finance_db
      - USERS_DB_HOST=users_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB}
      - CORS_ORIGINS=${CORS_ORIGINS}
    networks:
      - app-network

  finance_db:
    image: postgres:15
    volumes:
      - finance_data:/var/lib/postgresql/data
      - ./sql/init/init_finance_db.sql:/docker-entrypoint-initdb.d/init_finance_db.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${FINANCE_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    networks:
      - app-network

  users_db:
    image: postgres:15
    volumes:
      - users_data:/var/lib/postgresql/data
      - ./sql/init/init_users_db.sql:/docker-entrypoint-initdb.d/init_users_db.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${USERS_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    networks:
      - app-network
      
  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
      
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      finance_db:
        condition: service_healthy
      users_db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    name: ${COMPOSE_PROJECT_NAME}_network
    driver: bridge

volumes:
  finance_data:
    name: ${COMPOSE_PROJECT_NAME}_finance_data
  users_data:
    name: ${COMPOSE_PROJECT_NAME}_users_data
  redis_data:
    name: ${COMPOSE_PROJECT_NAME}_redis_data 