 # Finance API Project Intelligence

## –ö–ª—é—á–µ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Ä–µ—à–µ–Ω–∏—è

### 1. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã
- **Microservices –≤ Docker**: –ö–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
- **Database separation**: finance_db (–±–∏–∑–Ω–µ—Å) + users_db (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)  
- **Stateless backend**: JWT —Ç–æ–∫–µ–Ω—ã + Redis —Å–µ—Å—Å–∏–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
- **API-first**: –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ FastAPI —Å OpenAPI –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π

### 2. Frontend –ø–∞—Ç—Ç–µ—Ä–Ω—ã  
- **Vanilla JS + ES6 modules**: –ù–µ—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –¥–µ–ø–ª–æ—è
- **Adaptive API URL**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
```javascript
function getApiBaseUrl() {
    if (localhost:3000) return 'http://localhost:8000/api/v1';
    return '/api/v1';  // Relative path –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
}
```
- **URL constructor fix**: `new URL(relative, window.location.origin)` –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π

### 3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
- **Environment-driven**: –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
- **HOST –ø–∞—Ä–∞–º–µ—Çriz–∞—Ü–∏—è**: –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å–º–µ–Ω—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è
- **Docker-compose inheritance**: ${HOST} –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
- **CORS flexibility**: `CORS_ORIGINS=http://${HOST}` –¥–ª—è –∞–≤—Ç–æ–∞–¥–∞–ø—Ç–∞—Ü–∏–∏

### 4. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
- ‚ùå `serve` SPA mode ‚Üí ‚úÖ `http-server` –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
- ‚ùå `process.env` –≤ –±—Ä–∞—É–∑–µ—Ä–µ ‚Üí ‚úÖ Client-side config.js  
- ‚ùå Hardcoded localhost ‚Üí ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è HOST
- ‚ùå `new URL(relative)` ‚Üí ‚úÖ `new URL(relative, origin)`

### 5. Backend –ø–∞—Ç—Ç–µ—Ä–Ω—ã
- **Repository pattern**: –ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
- **Service layer**: –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –æ—Ç–¥–µ–ª–µ–Ω–∞ –æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
- **Dependency injection**: FastAPI –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è DI —Å–∏—Å—Ç–µ–º–∞
- **Pydantic settings**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —á—Ç–µ–Ω–∏–µ .env –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

### 6. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- **JWT + Refresh tokens**: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º —Å–µ—Å—Å–∏–π
- **bcrypt passwords**: –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- **Rate limiting**: slowapi –∑–∞—â–∏—Ç–∞ –æ—Ç –∞—Ç–∞–∫
- **CORS headers**: –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ origins

### 7. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å  
- **Async SQLAlchemy**: –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î
- **Connection pooling**: DB_POOL_SIZE=5, DB_MAX_OVERFLOW=10
- **Redis caching**: –ë—ã—Å—Ç—Ä—ã–µ —Å–µ—Å—Å–∏–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
- **Health checks**: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

## Workflow –ø–∞—Ç—Ç–µ—Ä–Ω—ã

### –î–µ–ø–ª–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
```bash
# –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞:
HOST=your-domain.com  # –≤ .env
docker-compose up -d  # –∏ –≥–æ—Ç–æ–≤–æ!
```

### –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º
1. **URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è**: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å serve vs http-server
2. **API –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω**: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å CORS_ORIGINS –≤ .env
3. **Invalid URL error**: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å new URL(path, origin)
4. **404 –Ω–∞ —Å—Ç–∞—Ç–∏–∫–µ**: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å nginx MIME types

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
```
src/           # Backend FastAPI
client/        # Frontend Vanilla JS  
memory-bank/   # –ü—Ä–æ–µ–∫—Ç–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
nginx/         # Reverse proxy config
sql/init/      # Database initialization
docker-compose.yml  # Orchestration
.env           # Configuration
```

### –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
- `client/scripts/config.js`: Frontend API configuration
- `src/core/config.py`: Backend settings —Å .env reading
- `nginx/nginx.conf`: Reverse proxy —Å ${HOST} substitution
- `docker-compose.yml`: Service orchestration
- `entrypoint.sh`: Graceful startup sequence

## –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è

### –°—Ç–∏–ª—å –∫–æ–¥–∞
- **Explicit over implicit**: –Ø–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏ —Ç–∏–ø—ã
- **Russian comments**: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
- **Structured logging**: JSON –ª–æ–≥–∏ —Å —É—Ä–æ–≤–Ω—è–º–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏
- **Error handling**: Graceful degradation –≤–µ–∑–¥–µ

### –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
- **Docker-first**: –í—Å–µ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
- **No build tools**: –ù–∞—Ç–∏–≤–Ω—ã–µ ES6 –º–æ–¥—É–ª–∏
- **PostgreSQL**: –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –ë–î
- **FastAPI**: Async-first backend framework

### –†–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
1. **–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π**: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env
2. **–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–π**: Relative paths over absolute
3. **–ò—Å–ø–æ–ª—å–∑—É–π**: async/await –¥–ª—è –≤—Å–µ—Ö I/O –æ–ø–µ—Ä–∞—Ü–∏–π
4. **–õ–æ–≥–∏—Ä—É–π**: –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

## –≠–≤–æ–ª—é—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞

### –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã ‚Üí –†–µ—à–µ–Ω–∏—è:
- SPA routing issues ‚Üí Static file server
- Environment coupling ‚Üí Variable parameterization  
- Frontend framework complexity ‚Üí Vanilla JS simplicity
- Monolithic database ‚Üí Separated concerns (2 DBs)

### –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: PRODUCTION READY üöÄ
- –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ
- –î–µ–ø–ª–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ Docker
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–∞
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞