import React, { useState, useRef } from 'react';
import Modal from '../Modal';
import Button from '../../ui/Button';
import Avatar from '../../common/Avatar/Avatar';
import { useToast } from '../../../context/ToastContext';
import { useAuthService } from '../../../services';
import styles from './AvatarChangeModal.module.css';

const AvatarChangeModal = ({ 
    isOpen, 
    onClose, 
    user, 
    onAvatarChanged 
}) => {
    const { showToast } = useToast();
    const authService = useAuthService();
    const fileInputRef = useRef(null);
    
    const [preview, setPreview] = useState(null);
    const [uploading, setUploading] = useState(false);
    const [dragActive, setDragActive] = useState(false);

    const handleFileSelect = (file) => {
        if (!file) return;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
        if (!file.type.startsWith('image/')) {
            showToast('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 'error');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5MB)
        if (file.size > 5 * 1024 * 1024) {
            showToast('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 5MB)', 'error');
            return;
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é
        const reader = new FileReader();
        reader.onload = (e) => {
            setPreview(e.target.result);
        };
        reader.readAsDataURL(file);
    };

    const handleFileInputChange = (e) => {
        const file = e.target.files[0];
        handleFileSelect(file);
    };

    const handleDrag = (e) => {
        e.preventDefault();
        e.stopPropagation();
    };

    const handleDragIn = (e) => {
        e.preventDefault();
        e.stopPropagation();
        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {
            setDragActive(true);
        }
    };

    const handleDragOut = (e) => {
        e.preventDefault();
        e.stopPropagation();
        setDragActive(false);
    };

    const handleDrop = (e) => {
        e.preventDefault();
        e.stopPropagation();
        setDragActive(false);
        
        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {
            handleFileSelect(e.dataTransfer.files[0]);
        }
    };

    const handleUpload = async () => {
        if (!preview || !fileInputRef.current?.files[0]) {
            showToast('–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 'error');
            return;
        }

        setUploading(true);
        try {
            const file = fileInputRef.current.files[0];
            await authService.uploadAvatar(file);
            
            showToast('–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω', 'success');
            onAvatarChanged?.();
            handleClose();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞:', error);
            showToast(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–≤–∞—Ç–∞—Ä–∞', 'error');
        } finally {
            setUploading(false);
        }
    };

    const handleRemoveAvatar = async () => {
        setUploading(true);
        try {
            await authService.removeAvatar();
            showToast('–ê–≤–∞—Ç–∞—Ä —É–¥–∞–ª–µ–Ω', 'success');
            onAvatarChanged?.();
            handleClose();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞:', error);
            showToast(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–≤–∞—Ç–∞—Ä–∞', 'error');
        } finally {
            setUploading(false);
        }
    };

    const handleClose = () => {
        setPreview(null);
        if (fileInputRef.current) {
            fileInputRef.current.value = '';
        }
        onClose();
    };

    const openFileDialog = () => {
        fileInputRef.current?.click();
    };

    return (
        <Modal
            isOpen={isOpen}
            onClose={handleClose}
            title="–°–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∞"
            size="md"
        >
            <div className={styles.container}>
                {/* –¢–µ–∫—É—â–∏–π –∞–≤–∞—Ç–∞—Ä */}
                <div className={styles.currentAvatar}>
                    <h4>–¢–µ–∫—É—â–∏–π –∞–≤–∞—Ç–∞—Ä</h4>
                    <Avatar user={user} size="large" />
                </div>

                {/* –û–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ */}
                <div className={styles.uploadSection}>
                    <h4>–ù–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä</h4>
                    
                    <div 
                        className={`${styles.dropZone} ${dragActive ? styles.dragActive : ''}`}
                        onDragEnter={handleDragIn}
                        onDragLeave={handleDragOut}
                        onDragOver={handleDrag}
                        onDrop={handleDrop}
                        onClick={openFileDialog}
                    >
                        {preview ? (
                            <div className={styles.preview}>
                                <img src={preview} alt="–ü—Ä–µ–≤—å—é" />
                                <div className={styles.previewOverlay}>
                                    <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ñ–∞–π–ª–∞</span>
                                </div>
                            </div>
                        ) : (
                            <div className={styles.uploadPrompt}>
                                <div className={styles.uploadIcon}>üì∑</div>
                                <p>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞</p>
                                <p className={styles.uploadHint}>
                                    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, GIF (–º–∞–∫—Å–∏–º—É–º 5MB)
                                </p>
                            </div>
                        )}
                    </div>

                    <input
                        ref={fileInputRef}
                        type="file"
                        accept="image/*"
                        onChange={handleFileInputChange}
                        className={styles.hiddenInput}
                    />
                </div>

                {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                <div className={styles.actions}>
                    <Button
                        onClick={handleUpload}
                        disabled={!preview || uploading}
                        loading={uploading}
                        variant="primary"
                    >
                        {uploading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
                    </Button>
                    
                    {user?.avatar_url && (
                        <Button
                            onClick={handleRemoveAvatar}
                            disabled={uploading}
                            variant="danger"
                        >
                            –£–¥–∞–ª–∏—Ç—å –∞–≤–∞—Ç–∞—Ä
                        </Button>
                    )}
                    
                    <Button
                        onClick={handleClose}
                        disabled={uploading}
                        variant="secondary"
                    >
                        –û—Ç–º–µ–Ω–∞
                    </Button>
                </div>
            </div>
        </Modal>
    );
};

export default AvatarChangeModal; 