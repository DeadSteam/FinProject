import React, { useState, useEffect, Suspense, lazy } from 'react';
import { useNavigate } from 'react-router-dom';

import { useAuthUser } from '../context/auth';
import { usePermissions } from '../hooks';
import { useNotifications } from '../hooks';
import { useErrorBoundary } from '../hooks';
import LoadingSpinner from '../components/common/LoadingSpinner';

// –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const AnalyticsFilters = lazy(() => import('../components/analytics/AnalyticsFilters'));
const AnalyticsCharts = lazy(() => import('../components/analytics/AnalyticsCharts'));
const AnalyticsTrends = lazy(() => import('../components/analytics/AnalyticsTrends'));
const AnalyticsComparison = lazy(() => import('../components/analytics/AnalyticsComparison'));

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ development —Ä–µ–∂–∏–º–∞
const isDevelopment = () => {
    if (typeof window !== 'undefined') {
        return window.location.hostname === 'localhost' && ['3000', '3001'].includes(window.location.port);
    }
    return false;
};

const dev = isDevelopment();

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:
 * - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≥–æ–¥–∞–º
 * - –ê–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –º–∞–≥–∞–∑–∏–Ω–∞–º  
 * - –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
 * - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –∏ —Ñ–∞–∫—Ç–æ–≤
 */
const Analytics = () => {
    const navigate = useNavigate();
    const user = useAuthUser();
    const { hasRole } = usePermissions();
    const { showSuccess, showError, showInfo } = useNotifications();
    const { ErrorBoundary } = useErrorBoundary();

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    const [activeTab, setActiveTab] = useState('comparison');
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const [filters, setFilters] = useState({
        years: [],
        categories: [],
        shops: [],
        metrics: ['fact', 'plan'],
        dateRange: {
            start: null,
            end: null
        },
        monthStart: 1,
        monthEnd: 12
    });

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const [analyticsData, setAnalyticsData] = useState(null);
    const [isLoading, setIsLoading] = useState(false);
    const [availableData, setAvailableData] = useState({
        years: [],
        categories: [],
        shops: [],
        metrics: []
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    useEffect(() => {
        if (!user) {
            navigate('/login', { replace: true });
            return;
        }
    }, [user, navigate]);

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    useEffect(() => {
        loadAvailableData();
    }, []);

    const loadAvailableData = async () => {
        try {
            setIsLoading(true);
            
            const token = localStorage.getItem('authToken');
            const headers = {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            };

            // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
            if (dev) {
                console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
            }
            const [yearsResponse, categoriesResponse, shopsResponse] = await Promise.all([
                fetch('/api/v1/finance/years', { headers }),
                fetch('/api/v1/finance/categories', { headers }),
                fetch('/api/v1/finance/shops', { headers })
            ]);

            if (dev) {
                console.log('üìä –°—Ç–∞—Ç—É—Å—ã –æ—Ç–≤–µ—Ç–æ–≤:', {
                    years: yearsResponse.status,
                    categories: categoriesResponse.status,
                    shops: shopsResponse.status
                });
            }

            if (!yearsResponse.ok || !categoriesResponse.ok || !shopsResponse.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
            }

            const [years, categories, shops] = await Promise.all([
                yearsResponse.json(),
                categoriesResponse.json(),
                shopsResponse.json()
            ]);

            if (dev) {
                console.log('‚úÖ –°–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
                    years: years.length,
                    categories: categories.length,
                    shops: shops.length
                });
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
            if (years.length === 0 && categories.length === 0 && shops.length === 0) {
                showError('–°–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö Period, Category, Shop.');
                return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
            }
            
            if (years.length === 0) {
                showError('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –≥–æ–¥–∞–º. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–∏–æ–¥—ã –≤ —Å–∏—Å—Ç–µ–º—É.');
            }
            
            if (categories.length === 0) {
                showError('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–∏—Å—Ç–µ–º—É.');
            }
            
            if (shops.length === 0) {
                showError('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–∞–≥–∞–∑–∏–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É.');
            }

            setAvailableData({
                years: years.map(year => ({
                    id: year.year,
                    name: year.year.toString(),
                    value: year.year
                })),
                categories: categories.map(cat => ({
                    id: cat.id,
                    name: cat.name,
                    value: cat.id
                })),
                shops: shops.map(shop => ({
                    id: shop.id,
                    name: shop.name,
                    value: shop.id
                })),
                // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ API
                metrics: []
            });

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            const currentYear = new Date().getFullYear();
            const defaultYears = years
                .filter(year => year.year >= currentYear - 2)
                .map(year => year.year); // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
            
            setFilters(prev => ({
                ...prev,
                years: defaultYears,
                metrics: ['fact', 'plan'] // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (fact = actual)
            }));

            if (dev) {
                console.log('üéØ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', {
                    years: defaultYears,
                    totalYears: years.length,
                    metrics: ['fact', 'plan']
                });
            }

        } catch (error) {
            if (dev) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            }
            let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö';
            
            if (error.message.includes('HTTP 401')) {
                errorMessage = '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.';
                navigate('/login', { replace: true });
            } else if (error.message.includes('HTTP 403')) {
                errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.';
            } else if (error.message.includes('HTTP 404')) {
                errorMessage = 'API endpoints –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ backend.';
            } else if (error.message.includes('Failed to fetch')) {
                errorMessage = '–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.';
            } else {
                errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message;
            }
            
            showError(errorMessage);
        } finally {
            setIsLoading(false);
        }
    };

    const handleFiltersChange = (newFilters) => {
        setFilters(prev => ({
            ...prev,
            ...newFilters
        }));
    };

    const handleTabChange = (tab) => {
        setActiveTab(tab);
    };

    const loadAnalyticsData = async () => {
        try {
            setIsLoading(true);
            
            const token = localStorage.getItem('authToken');
            const headers = {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            };

            // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
            const params = new URLSearchParams();
            
            if (filters.years.length > 0) {
                params.append('years', filters.years.join(','));
            }
            if (filters.categories.length > 0) {
                params.append('categories', filters.categories.join(','));
            }
            if (filters.shops.length > 0) {
                params.append('shops', filters.shops.join(','));
            }
            if (filters.metrics.length > 0) {
                params.append('metrics', filters.metrics.join(','));
            }
            // –î–∏–∞–ø–∞–∑–æ–Ω –º–µ—Å—è—Ü–µ–≤ –¥–ª—è —Ç—Ä–µ–Ω–¥–æ–≤ –≤ –º–µ—Å—è—á–Ω–æ–º —Ä–µ–∂–∏–º–µ (–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω)
            if (filters.monthStart) params.append('month_start', String(filters.monthStart));
            if (filters.monthEnd) params.append('month_end', String(filters.monthEnd));

            const url = `/api/v1/finance/analytics/comprehensive?${params}`;
                    if (dev) {
            console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:', url);
            console.log('üìã –§–∏–ª—å—Ç—Ä—ã:', filters);
        }
            
            const response = await fetch(url, {
                headers
            });

            if (dev) {
                console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', response.status);
            }

            if (!response.ok) {
                throw new Error(`HTTP ${response.status}`);
            }

            const data = await response.json();
            if (dev) {
                console.log('‚úÖ –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
                    hasComparison: !!data.comparison,
                    hasTrends: !!data.trends,
                    hasPlanVsActual: !!data.planVsActual
                });
            }
            
            setAnalyticsData(data);

        } catch (error) {
            if (dev) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
            }
        } finally {
            setIsLoading(false);
        }
    };

    // –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ (–¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å")
    const handleManualRefresh = async () => {
        try {
            await loadAnalyticsData();
            showSuccess('–î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        } catch (error) {
            if (dev) {
                console.error('–û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
            }
            let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö';
            
            if (error.message.includes('HTTP 401')) {
                errorMessage = '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.';
                navigate('/login', { replace: true });
            } else if (error.message.includes('HTTP 403')) {
                errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.';
            } else if (error.message.includes('HTTP 404')) {
                errorMessage = 'API endpoints –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ backend.';
            } else if (error.message.includes('Failed to fetch')) {
                errorMessage = '–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.';
            } else {
                errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message;
            }
            
            showError(errorMessage);
        }
    };

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    useEffect(() => {
        if (filters.years.length > 0 || filters.categories.length > 0 || filters.shops.length > 0) {
            loadAnalyticsData();
        }
    }, [filters]);

    if (!user) {
        return null;
    }

    const tabs = [
        {
            id: 'comparison',
            name: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ',
            icon: (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M3 3v18h18"/>
                    <path d="M18.7 8l-5.1 5.1-2.8-2.8L7 14.1"/>
                </svg>
            ),
            description: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –≥–æ–¥–∞–º, –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –º–∞–≥–∞–∑–∏–Ω–∞–º'
        },
        {
            id: 'trends',
            name: '–¢—Ä–µ–Ω–¥—ã',
            icon: (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M3 3v18h18"/>
                    <path d="M7 12l3-3 3 3 5-5"/>
                </svg>
            ),
            description: '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –¥–∏–Ω–∞–º–∏–∫–∏'
        },
        {
            id: 'plan-vs-actual',
            name: '–ü–ª–∞–Ω vs –§–∞–∫—Ç',
            icon: (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M12 2L2 7l10 5 10-5-10-5z"/>
                    <path d="M2 17l10 5 10-5"/>
                    <path d="M2 12l10 5 10-5"/>
                </svg>
            ),
            description: '–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –∏ —Ñ–∞–∫—Ç–æ–≤'
        },
        {
            id: 'insights',
            name: '–ò–Ω—Å–∞–π—Ç—ã',
            icon: (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M9 11H5a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2h-4"/>
                    <path d="M12 2l3 7H9l3-7z"/>
                </svg>
            ),
            description: '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'
        }
    ];

    return (
        <ErrorBoundary>
            <div className="main-content">
                

                {/* –§–∏–ª—å—Ç—Ä—ã */}
                <div className="card mb-4">
                    <Suspense fallback={<div>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤...</div>}>
                        <AnalyticsFilters
                            filters={filters}
                            availableData={availableData}
                            onChange={handleFiltersChange}
                            isLoading={isLoading}
                        />
                    </Suspense>
                </div>

                {/* –í–∫–ª–∞–¥–∫–∏ */}
                <div className="card mb-4">
                    <div className="d-flex flex-wrap" style={{gap: '8px'}}>
                        {tabs.map(tab => (
                            <button
                                key={tab.id}
                                className={`btn ${activeTab === tab.id ? 'btn-primary' : 'btn-secondary'} d-flex align-items-center`}
                                onClick={() => handleTabChange(tab.id)}
                                style={{flex: '1', minWidth: '200px'}}
                            >
                                {tab.icon}
                                <div className="ml-2 text-left">
                                    <div className="fw-bold">{tab.name}</div>
                                    <small className="opacity-75">{tab.description}</small>
                                </div>
                            </button>
                        ))}
                    </div>
                </div>

                {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
                <div className="card">
                    <Suspense fallback={<LoadingSpinner />}>
                        {activeTab === 'comparison' && (
                            <AnalyticsComparison
                                analyticsData={analyticsData}
                                filters={filters}
                                isLoading={isLoading}
                            />
                        )}

                        {activeTab === 'trends' && (
                            <AnalyticsTrends
                                analyticsData={analyticsData}
                                filters={filters}
                                isLoading={isLoading}
                                onMonthRangeChange={(start, end) => setFilters(prev => ({ ...prev, monthStart: start, monthEnd: end }))}
                            />
                        )}

                        {activeTab === 'plan-vs-actual' && (
                            <AnalyticsCharts
                                analyticsData={analyticsData}
                                filters={filters}
                                isLoading={isLoading}
                            />
                        )}

                        {activeTab === 'insights' && (
                            <div className="text-center p-4">
                                <h3 className="mb-3">–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã</h3>
                                <p className="text-secondary">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</p>
                            </div>
                        )}
                    </Suspense>
                </div>
            </div>
        </ErrorBoundary>
    );
};

export default Analytics; 